from sqlmodel import Session

from library.crud.site import CRUDSite
from library.crud.tenant import CRUDTenant
from library.models.site import Site, SiteCreate
from library.models.tenant import Tenant, TenantCreate


class PopulateDatabaseService:
    db: Session
    crud_site: CRUDSite
    crud_tenant: CRUDTenant

    def __init__(self, db):
        self.db = db
        self.crud_site = CRUDSite(db)
        self.crud_tenant = CRUDTenant(db)

    def populate_tenant_table(self):
        # here it should rather be a list of TenantCreate objects because
        # the tenant with name ALL can exist with id=2 for example
        # (if the id was generated by the database)
        # i changed id=0 to id=1 because the database id autogenerated starts at 1
        tenants_list = [Tenant(id=1, name="ALL")]

        for tenant_to_create in tenants_list:
            # Check if tenant already exists (by name)
            # tenant = self.crud_tenant.get_by_name(tenant_to_create.name)
            # Check if tenant already exists (by id)
            tenant = self.crud_tenant.get(id=tenant_to_create.id)

            if not tenant:  # does not exist -> create
                # id is generated by the database
                self.crud_tenant.add(TenantCreate(name=tenant_to_create.name))

    def populate_site_table(self):
        # here it should rather be a list of SiteCreate objects too
        tenant_all = self.crud_tenant.get_by_name("ALL")
        sites_list = [
            Site(
                id=1,
                name="ALL",
                tenant=tenant_all,
            )  # id, name, tenant_id
        ]
        for site_to_create in sites_list:
            site = self.crud_site.get(id=site_to_create.id)
            if not site:
                self.crud_site.add(
                    SiteCreate(
                        name=site_to_create.name,
                        tenant_id=site_to_create.tenant.id,
                    )
                )

    def populate_tables(self):
        self.populate_tenant_table()
        self.populate_site_table()
